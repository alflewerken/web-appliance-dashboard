services:
  # Database Service
  database:
    image: mariadb:latest
    container_name: ${DB_CONTAINER_NAME:-appliance_db}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./init-db:/docker-entrypoint-initdb.d:ro
    networks:
      - ${NETWORK_NAME:-appliance_network}
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h localhost -u root --password=\"${MYSQL_ROOT_PASSWORD}\" || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-5}
      start_period: 40s

  # Backend API
  backend:
    image: ghcr.io/alflewerken/web-appliance-dashboard-backend:latest
    container_name: ${BACKEND_CONTAINER_NAME:-appliance_backend}
    restart: always
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    environment:
      DB_HOST: ${DB_HOST:-database}
      DB_PORT: ${DB_PORT:-3306}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      SSH_KEY_ENCRYPTION_SECRET: ${SSH_KEY_ENCRYPTION_SECRET}
      NODE_ENV: ${NODE_ENV:-production}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      SSH_TOOLS_ENABLED: ${SSH_TOOLS_ENABLED:-true}
      SSH_AUTO_INIT: ${SSH_AUTO_INIT:-true}
      GUACAMOLE_URL: ${GUACAMOLE_URL}
      GUACAMOLE_PROXY_URL: ${GUACAMOLE_PROXY_URL}
      GUACAMOLE_DB_HOST: ${GUACAMOLE_DB_HOST:-appliance_guacamole_db}
      GUACAMOLE_DB_NAME: ${GUACAMOLE_DB_NAME:-guacamole_db}
      GUACAMOLE_DB_USER: ${GUACAMOLE_DB_USER:-guacamole_user}
      GUACAMOLE_DB_PASSWORD: ${GUACAMOLE_DB_PASSWORD:-guacamole_pass123}
      EXTERNAL_URL: ${EXTERNAL_URL}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FORMAT: ${LOG_FORMAT:-combined}
      DOCKER_HOST_INTERNAL: 'true'
    depends_on:
      database:
        condition: service_healthy
    networks:
      - ${NETWORK_NAME:-appliance_network}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ssh_keys:/root/.ssh
      - uploads:/app/uploads
      - terminal_sessions:/tmp/terminal-sessions
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:3001/api/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: 40s

  # Nginx Web Server
  webserver:
    image: ghcr.io/alflewerken/web-appliance-dashboard-nginx:latest
    container_name: ${WEBSERVER_CONTAINER_NAME:-appliance_webserver}
    restart: always
    ports:
      - "${NGINX_HTTP_PORT:-9080}:80"
      - "${NGINX_HTTPS_PORT:-9443}:443"
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - ttyd
    networks:
      - ${NETWORK_NAME:-appliance_network}
    environment:
      BACKEND_URL: http://backend:3001
      EXTERNAL_URL: ${EXTERNAL_URL:-http://localhost:9080}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}

  # ttyd Web Terminal
  ttyd:
    image: ghcr.io/alflewerken/web-appliance-dashboard-ttyd:latest
    container_name: ${TTYD_CONTAINER_NAME:-appliance_ttyd}
    restart: always
    command: >
      ttyd
      --writable
      --port 7681
      --base-path /
      --terminal-type xterm-256color
      /scripts/ttyd-ssh-wrapper.sh
    environment:
      SSH_PORT: ${TTYD_DEFAULT_PORT:-22}
    networks:
      - ${NETWORK_NAME:-appliance_network}
    volumes:
      - ssh_keys:/root/.ssh
      - terminal_sessions:/tmp/terminal-sessions
    healthcheck:
      test: ["CMD", "sh", "-c", "pidof ttyd || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}

  # Guacamole Proxy Daemon
  guacd:
    image: guacamole/guacd:1.5.5
    container_name: ${GUACD_CONTAINER_NAME:-appliance_guacd}
    restart: always
    volumes:
      - guacamole_drive:/drive:rw
      - guacamole_record:/record:rw
    environment:
      GUACD_LOG_LEVEL: ${GUACD_LOG_LEVEL:-warning}
    networks:
      - ${NETWORK_NAME:-appliance_network}
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4822"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}

  # Guacamole PostgreSQL Database
  guacamole-postgres:
    image: postgres:15-alpine
    container_name: ${GUACAMOLE_DB_CONTAINER_NAME:-appliance_guacamole_db}
    restart: always
    environment:
      POSTGRES_DB: ${GUACAMOLE_DB_NAME:-guacamole_db}
      POSTGRES_USER: ${GUACAMOLE_DB_USER:-guacamole_user}
      POSTGRES_PASSWORD: ${GUACAMOLE_DB_PASSWORD:-guacamole_pass123}
    volumes:
      - guacamole_db:/var/lib/postgresql/data
      - ./guacamole/001-create-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./guacamole/002-create-admin-user.sql:/docker-entrypoint-initdb.d/02-admin.sql:ro
      - ./guacamole/custom-sftp.sql:/docker-entrypoint-initdb.d/03-custom-sftp.sql:ro
    networks:
      - ${NETWORK_NAME:-appliance_network}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${GUACAMOLE_DB_USER:-guacamole_user}"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}

  # Guacamole Web Application
  guacamole:
    image: ghcr.io/alflewerken/web-appliance-dashboard-guacamole:latest
    container_name: ${GUACAMOLE_CONTAINER_NAME:-appliance_guacamole}
    restart: always
    depends_on:
      guacd:
        condition: service_healthy
      guacamole-postgres:
        condition: service_healthy
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRES_HOSTNAME: guacamole-postgres
      POSTGRES_DATABASE: ${GUACAMOLE_DB_NAME:-guacamole_db}
      POSTGRES_USER: ${GUACAMOLE_DB_USER:-guacamole_user}
      POSTGRES_PASSWORD: ${GUACAMOLE_DB_PASSWORD:-guacamole_pass123}
      HEADER_ENABLED: 'true'
      HTTP_AUTH_HEADER: 'REMOTE_USER'
      EXTENSION_PRIORITY: '*'
      GUACAMOLE_HOME: /etc/guacamole
      JWT_SECRET: ${JWT_SECRET}
      DB_HOST: database
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DEFAULT_SSH_USER: ${DEFAULT_SSH_USER:-}
      DEFAULT_SSH_PASS: ${DEFAULT_SSH_PASS:-}
    volumes:
      - guacamole_home:/etc/guacamole
    networks:
      appliance_network:
        aliases:
          - guacamole-app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/guacamole/"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: 60s

  # RustDesk ID/Rendezvous Server
  rustdesk-server:
    image: rustdesk/rustdesk-server:latest
    container_name: ${RUSTDESK_SERVER_CONTAINER:-rustdesk-server}
    command: hbbs
    restart: always
    environment:
      - RELAY=0.0.0.0:21117
      - PORT=21116
    ports:
      - "${RUSTDESK_ID_PORT:-21216}:21116"
      - "${RUSTDESK_ID_PORT:-21216}:21116/udp"
      - "${RUSTDESK_WEB_PORT:-21218}:21118"
      - "${RUSTDESK_API_PORT:-21219}:21119"
    volumes:
      - rustdesk_data:/root
    networks:
      - ${NETWORK_NAME:-appliance_network}

  # RustDesk Relay Server
  rustdesk-relay:
    image: rustdesk/rustdesk-server:latest
    container_name: ${RUSTDESK_RELAY_CONTAINER:-rustdesk-relay}
    command: hbbr
    restart: always
    ports:
      - "${RUSTDESK_RELAY_PORT:-21217}:21117"
      - "${RUSTDESK_WEBSOCKET_PORT:-21220}:21120"
    volumes:
      - rustdesk_data:/root
    networks:
      - ${NETWORK_NAME:-appliance_network}

# Volumes
volumes:
  db_data:
    driver: local
  ssh_keys:
    driver: local
  uploads:
    driver: local
  terminal_sessions:
    driver: local
  guacamole_db:
    driver: local
  guacamole_drive:
    driver: local
  guacamole_record:
    driver: local
  guacamole_home:
    driver: local
  rustdesk_data:
    driver: local

# Networks
networks:
  appliance_network:
    name: ${NETWORK_NAME:-appliance_network}
    driver: bridge
