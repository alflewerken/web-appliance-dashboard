events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 50M;
    
    # Docker DNS resolver
    resolver 127.0.0.11 valid=30s;
    
    # Upstream definitions with variables (allows optional services)
    upstream backend_upstream {
        server backend:3001;
    }
    
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        
        # Frontend
        location / {
            set $frontend_upstream frontend;
            proxy_pass http://$frontend_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Backend API
        location /api/ {
            proxy_pass http://backend_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # WebSocket for backend
        location /socket.io/ {
            proxy_pass http://backend_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }        
        # Uploads directory (images, etc) - CRITICAL for background images
        location /uploads {
            proxy_pass http://backend_upstream;
            proxy_http_version 1.1;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            expires 7d;
            add_header Cache-Control "public, immutable";
        }
        
        # Terminal (ttyd) - with error handling
        location /wetty/ {
            set $ttyd_upstream ttyd:3000;
            proxy_pass http://$ttyd_upstream/wetty/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 3600s;            proxy_send_timeout 3600s;
            
            # Return 503 if service unavailable
            proxy_intercept_errors on;
            error_page 502 503 504 = @service_unavailable;
        }
        
        # Guacamole - with error handling
        location /guacamole/ {
            set $guac_upstream guacamole:8080;
            proxy_pass http://$guac_upstream/guacamole/;
            proxy_buffering off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            access_log off;
            
            # Increased timeouts for Guacamole
            proxy_connect_timeout 60s;
            proxy_send_timeout 90s;
            proxy_read_timeout 90s;
            
            # Return 503 if service unavailable
            proxy_intercept_errors on;
            error_page 502 503 504 = @service_unavailable;
        }
        
        # Service unavailable handler        location @service_unavailable {
            add_header Content-Type application/json;
            return 503 '{"error": "Service temporarily unavailable", "message": "The requested service is starting up or not available"}';
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }
    }
    
    # HTTPS server (optional)
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name _;
        
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # Copy all location blocks from above
        include /etc/nginx/conf.d/locations.conf*;
    }
}