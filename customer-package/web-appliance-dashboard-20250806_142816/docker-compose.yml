version: '3.8'

services:
  # MariaDB Database
  database:
    image: mariadb:latest
    container_name: appliance_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - appliance_network
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h localhost -u root --password='${MYSQL_ROOT_PASSWORD}' || exit 1"]
      timeout: 10s
      retries: 20
      start_period: 40s

  # Backend API
  backend:
    image: ghcr.io/alflewerken/web-appliance-dashboard-backend:latest
    container_name: appliance_backend
    restart: always
    environment:
      DB_HOST: database
      DB_PORT: 3306
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      SSH_KEY_ENCRYPTION_SECRET: ${SSH_KEY_ENCRYPTION_SECRET}
      NODE_ENV: production
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
      - ssh_keys:/root/.ssh
    depends_on:
      database:
        condition: service_healthy
    networks:
      - appliance_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ttyd Terminal Service
  ttyd:
    image: wettyoss/wetty:latest
    container_name: appliance_ttyd
    restart: always
    environment:
      - SSHHOST=host.docker.internal
      - SSHPORT=22
    networks:
      - appliance_network

  # Guacamole daemon
  guacd:
    image: guacamole/guacd:latest
    container_name: appliance_guacd
    restart: always
    networks:
      - appliance_network
    healthcheck:
      test: ["CMD-SHELL", "test -S /var/run/guacd/guacd.sock || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Guacamole PostgreSQL
  guacamole-postgres:
    image: postgres:15-alpine
    container_name: appliance_guacamole_db
    restart: always
    environment:
      POSTGRES_DB: ${GUACAMOLE_DB_NAME:-guacamole_db}
      POSTGRES_USER: ${GUACAMOLE_DB_USER:-guacamole_user}
      POSTGRES_PASSWORD: ${GUACAMOLE_DB_PASSWORD:-guacamole_pass123}
    volumes:
      - guacamole_postgres_data:/var/lib/postgresql/data
    networks:
      - appliance_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${GUACAMOLE_DB_USER:-guacamole_user}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Guacamole Web Application
  guacamole:
    image: ghcr.io/alflewerken/web-appliance-dashboard-guacamole:latest
    container_name: appliance_guacamole
    restart: always
    depends_on:
      guacd:
        condition: service_healthy
      guacamole-postgres:
        condition: service_healthy
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRES_HOSTNAME: guacamole-postgres
      POSTGRES_DATABASE: ${GUACAMOLE_DB_NAME:-guacamole_db}
      POSTGRES_USER: ${GUACAMOLE_DB_USER:-guacamole_user}
      POSTGRES_PASSWORD: ${GUACAMOLE_DB_PASSWORD:-guacamole_pass123}
      JWT_SECRET: ${JWT_SECRET}
      DB_HOST: database
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - guacamole_home:/etc/guacamole
    networks:
      - appliance_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/guacamole/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # RustDesk ID Server (optional)
  rustdesk-server:
    image: rustdesk/rustdesk-server:latest
    container_name: rustdesk-server
    command: hbbs
    restart: always
    ports:
      - "21116:21116"
      - "21116:21116/udp"
      - "21118:21118"
      - "21119:21119"
    volumes:
      - rustdesk_data:/root
    networks:
      - appliance_network

  # RustDesk Relay Server (optional)
  rustdesk-relay:
    image: rustdesk/rustdesk-server:latest
    container_name: rustdesk-relay
    command: hbbr
    restart: always
    ports:
      - "21117:21117"
      - "21120:21120"
    volumes:
      - rustdesk_data:/root
    networks:
      - appliance_network

  # Nginx Webserver
  webserver:
    image: nginx:alpine
    container_name: appliance_webserver
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
      - ttyd
      - guacamole
    networks:
      - appliance_network

  # Frontend static files server
  frontend:
    image: ghcr.io/alflewerken/web-appliance-dashboard-frontend:latest
    container_name: appliance_frontend
    restart: always
    networks:
      - appliance_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data:
  backend_uploads:
  backend_logs:
  ssh_keys:
  guacamole_home:
  guacamole_postgres_data:
  rustdesk_data:

networks:
  appliance_network:
    driver: bridge
