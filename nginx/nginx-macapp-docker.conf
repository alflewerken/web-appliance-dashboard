events {
    worker_connections 1024;
}

http {
    # Manually define common mime types
    default_type  application/octet-stream;

    types {
        text/html                             html htm shtml;
        text/css                              css;
        text/xml                              xml;
        image/gif                             gif;
        image/jpeg                            jpeg jpg;
        application/javascript                js;
        application/json                      json;
        application/x-font-ttf                ttc ttf;
        application/x-font-otf                otf;
        application/x-font-woff               woff;
        application/x-font-woff2              woff2;
        application/vnd.ms-fontobject         eot;
        application/octet-stream              bin exe dll;
        application/octet-stream              deb;
        application/octet-stream              dmg;
        application/octet-stream              iso img;
        application/octet-stream              msi msp msm;
        audio/mpeg                            mp3;
        audio/x-realaudio                     ra;
        video/mp4                             mp4;
        video/mpeg                            mpeg mpg;
        video/quicktime                       mov;
        video/webm                            webm;
        video/x-flv                           flv;
        video/x-mng                           mng;
        video/x-ms-asf                        asx asf;
        video/x-ms-wmv                        wmv;
        video/x-msvideo                       avi;
        image/png                             png;
        image/svg+xml                         svg svgz;
        image/tiff                            tif tiff;
        image/webp                            webp;
        image/x-icon                          ico;
        image/x-jng                           jng;
        image/x-ms-bmp                        bmp;
    }

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # HTTP Server
    server {
        listen 80;
        server_name _;

        # Increase client body size for uploads and backups
        client_max_body_size 200M;

        # Backend API - MUSS VOR location / stehen
        location /api {
            proxy_pass http://wad_app_backend:3001;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Increase body size limit for backup uploads
            client_max_body_size 200M;
            
            # CORS Headers für API
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        # Uploads directory (images, etc) - MUSS VOR location / stehen
        location /uploads {
            proxy_pass http://wad_app_backend:3001;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache images
            location ~* \.(jpg|jpeg|png|gif|webp|svg)$ {
                proxy_pass http://wad_app_backend:3001;
                expires 7d;
                add_header Cache-Control "public, immutable";
            }
        }

        # WebSocket support - MUSS VOR location / stehen
        location /socket.io {
            proxy_pass http://wad_app_backend:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Terminal WebSocket support - MUSS VOR location / stehen
        location /api/terminal-session {
            proxy_pass http://wad_app_backend:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 86400;
        }

        # ttyd Web Terminal - MUSS VOR location / stehen
        location /terminal/ {
            proxy_pass http://wad_app_ttyd:7681/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 86400;
            
            # Fix für relative Ressourcen
            proxy_set_header X-Forwarded-Prefix /terminal;
        }
        
        # ttyd static resources
        location ~ ^/terminal/(auth|css|js|favicon.ico) {
            proxy_pass http://wad_app_ttyd:7681$request_uri;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Guacamole Remote Desktop - MUSS VOR location / stehen
        location /guacamole/ {
            # Use resolver to make upstream optional
            resolver 127.0.0.11 valid=30s;
            set $upstream_guacamole wad_app_guacamole:8080;
            
            proxy_pass http://$upstream_guacamole/guacamole/;
            proxy_buffering off;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
            proxy_cookie_path /guacamole/ /guacamole/;
            access_log off;
            
            # WebSocket support für Guacamole
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings für Remote Desktop Sessions
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            
            # Fix für CORS in iFrames
            add_header X-Frame-Options "SAMEORIGIN" always;
        }

        # Health check endpoint - MUSS VOR location / stehen
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Frontend - Static files from volume - MUSS ZULETZT kommen
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            
            # Ensure proper MIME types
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
    }
}
