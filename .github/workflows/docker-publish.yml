name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Build Frontend
      run: |
        echo "Building frontend..."
        cd frontend
        npm ci
        npm run build
        echo "Frontend built successfully"

    - name: Copy Frontend Build to Nginx
      run: |
        echo "Copying frontend build to nginx directory..."
        # Remove old static files
        rm -rf nginx/static
        # Copy new build files
        cp -r frontend/build/static nginx/
        cp frontend/build/*.* nginx/ 2>/dev/null || true
        echo "Frontend files copied to nginx directory"

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/alflewerken/web-appliance-dashboard-backend:latest
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push Nginx Docker image (with fresh frontend)
      uses: docker/build-push-action@v5
      with:
        context: ./nginx
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/alflewerken/web-appliance-dashboard-nginx:latest
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push Guacamole Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./guacamole
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/alflewerken/web-appliance-dashboard-guacamole:latest
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push TTYD Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./ttyd
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/alflewerken/web-appliance-dashboard-ttyd:latest
        labels: ${{ steps.meta.outputs.labels }}
    
    - name: Make images public
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
      run: |
        chmod +x .github/scripts/make-images-public.sh
        .github/scripts/make-images-public.sh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}

    - name: Summary
      run: |
        echo "### âœ… All Images Built and Pushed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Images:**" >> $GITHUB_STEP_SUMMARY
        echo "- Backend: \`${{ env.REGISTRY }}/alflewerken/web-appliance-dashboard-backend:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- Nginx: \`${{ env.REGISTRY }}/alflewerken/web-appliance-dashboard-nginx:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- Guacamole: \`${{ env.REGISTRY }}/alflewerken/web-appliance-dashboard-guacamole:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- TTYD: \`${{ env.REGISTRY }}/alflewerken/web-appliance-dashboard-ttyd:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Frontend:** Built fresh and included in nginx image" >> $GITHUB_STEP_SUMMARY

# Initial build triggered on 2025-08-11 to publish Docker images
