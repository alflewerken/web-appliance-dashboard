name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Generate changelog
      id: changelog
      uses: mindsers/changelog-reader-action@v2
      with:
        version: ${{ steps.get_version.outputs.VERSION }}
        path: ./CHANGELOG.md
    
    - name: Create Release Archive
      run: |
        # Create release directory
        mkdir -p release/web-appliance-dashboard
        
        # Copy necessary files
        cp -r backend frontend nginx scripts docker-compose.yml init.sql *.md *.sh LICENSE release/web-appliance-dashboard/
        
        # Remove node_modules and other unnecessary files
        find release -name "node_modules" -type d -prune -exec rm -rf '{}' +
        find release -name ".env" -type f -delete
        find release -name "*.log" -type f -delete
        
        # Create archive
        cd release
        tar -czf web-appliance-dashboard-v${{ steps.get_version.outputs.VERSION }}.tar.gz web-appliance-dashboard/
        zip -r web-appliance-dashboard-v${{ steps.get_version.outputs.VERSION }}.zip web-appliance-dashboard/
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: false
        name: Release v${{ steps.get_version.outputs.VERSION }}
        body: ${{ steps.changelog.outputs.changes }}
        files: |
          release/web-appliance-dashboard-v${{ steps.get_version.outputs.VERSION }}.tar.gz
          release/web-appliance-dashboard-v${{ steps.get_version.outputs.VERSION }}.zip
    
    - name: Build and Push Docker Images
      env:
        DOCKER_REGISTRY: ghcr.io
        DOCKER_USERNAME: ${{ github.actor }}
        DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo $DOCKER_PASSWORD | docker login $DOCKER_REGISTRY -u $DOCKER_USERNAME --password-stdin
        
        # Build and tag images
        docker build -t $DOCKER_REGISTRY/${{ github.repository }}/backend:v${{ steps.get_version.outputs.VERSION }} ./backend
        docker build -t $DOCKER_REGISTRY/${{ github.repository }}/frontend:v${{ steps.get_version.outputs.VERSION }} ./frontend
        
        # Also tag as latest
        docker tag $DOCKER_REGISTRY/${{ github.repository }}/backend:v${{ steps.get_version.outputs.VERSION }} $DOCKER_REGISTRY/${{ github.repository }}/backend:latest
        docker tag $DOCKER_REGISTRY/${{ github.repository }}/frontend:v${{ steps.get_version.outputs.VERSION }} $DOCKER_REGISTRY/${{ github.repository }}/frontend:latest
        
        # Push all tags
        docker push $DOCKER_REGISTRY/${{ github.repository }}/backend:v${{ steps.get_version.outputs.VERSION }}
        docker push $DOCKER_REGISTRY/${{ github.repository }}/backend:latest
        docker push $DOCKER_REGISTRY/${{ github.repository }}/frontend:v${{ steps.get_version.outputs.VERSION }}
        docker push $DOCKER_REGISTRY/${{ github.repository }}/frontend:latest
